plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=40, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=30, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=16, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=8, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x=-5,y=32, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=35, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=40, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=35, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=16, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=8, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 =  MB")
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=40, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=35, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=10, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=5, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 =  MB")
text(x = 50, y = 118, pos = 4, labels = "N50 =  MB")
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=40, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=35, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 =  MB")
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=25, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=20, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 =  MB", cex = 0.8)
text(x = 50, y = 118, pos = 4, labels = "N50 =  MB", cex = 0.8)
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=25, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=20, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 = 83.3 MB", cex = 0.8)
text(x = 50, y = 118, pos = 4, labels = "The longest contig= 126 MB", cex = 0.8)
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=25, labels = "Genome Size: ", pos = 4, cex = 0.8)
text(x=-5,y=20, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 = 83.3 MB", cex = 0.8)
text(x = 50, y = 120, pos = 4, labels = "The longest contig = 126 MB", cex = 0.8)
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = "Cheirotonus formosanus")
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=25, labels = "Genome Size: 603 MB", pos = 4, cex = 0.8)
text(x=-5,y=20, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 = 83.3 MB", cex = 0.8)
text(x = 50, y = 120, pos = 4, labels = "The longest contig = 126 MB", cex = 0.8)
# add the value to make the line go to 0
plot(x, y, type = "n", pch = 19,
xlim = c(0,100),
xlab = "Genome Coverage (%)", ylab = "Contig Size", main = substitute(paste(italic('Cheirotonus formosanus'))))
# Loop through points and draw horizontal and vertical lines
for (i in 1:(length(x)-1)) {
# Horizontal line between current point and the next point
segments(x[i], y[i], x[i+1], y[i])
# Vertical line between next point's y level and previous point's x level
segments(x[i+1], y[i], x[i+1], y[i+1])
}
text(x=-5,y=25, labels = "Genome Size: 603 MB", pos = 4, cex = 0.8)
text(x=-5,y=20, labels = "Scaffolds: 77", pos = 4, cex = 0.8)
text(x=-5,y=9, labels = "BUSCO", pos = 4, cex = 0.8)
text(x=-5,y=4, labels = "C:99.3%[S:98.4%, D:0.9%]", pos = 4, cex = 0.7)
text(x=-5,y=0, labels = "F:0.4%, M:0.3%", pos = 4, cex = 0.7)
abline(v = 50, col = "red", lty = 2)
text(x = 50, y = 125, pos = 4, labels = "N50 = 83.3 MB", cex = 0.8)
text(x = 50, y = 120, pos = 4, labels = "The longest contig = 126 MB", cex = 0.8)
setwd("~/Documents/GitHub/scarab-chromes/data")
dat <- read_csv('SpeciesChromList.csv')
dat
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
tips
View(dat)
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tip.names[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tip.names[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
}
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
}
final
View(hitdat)
final <- data.frame()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
}
}
final
i =1
tips[i] %in% dat$Name
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
hitdat
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(final, hitdat)
final <- data.frame()
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
final
View(final)
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)][1]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)][1]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i])[1],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i])[1],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
final
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
write_csv(final, file = "sub_chrom.csv")
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
print(i)
# if record are different keep all, otherwise just 1
if (dat[which(dat$Genus == tips[i]),c(1,4,6,8)])
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
final <- c()
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
print(i)
# if record are different keep all, otherwise just 1
# if (dat[which(dat$Genus == tips[i]),c(1,4,6,8)])
#
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
i =2
dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
3
y =3
dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
i =227
dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
final <- c()
count <- 0
# record more than 1
count <- 0
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
if (length(hitdat$Family) == 1){
count += 1
final <- c()
# record more than 1
count <- 0
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
if (length(hitdat$Family) == 1){
count = count + 1
}
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
if (length(hitdat$Family) == 1){
count = count + 1
}
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
336-194
library(dplyr)
# Example data
data <- data.frame(
Name = c('Alice', 'Bob', 'Alice', 'Charlie', 'Bob', 'Alice'),
Number = c(123, 123, 123, 456, 123, 123),
XY_XO = c('XY', 'XY', 'XY', 'XO', 'XY', 'XY')
)
data
# Example data
data <- data.frame(
Name = c('Alice', 'Bob', 'Alice', 'Charlie', 'Bob', 'Alice'),
Number = c(456, 123, 123, 456, 123, 123),
XY_XO = c('XY', 'XY', 'XY', 'XO', 'XY', 'XY')
)
data
# Example data
data <- data.frame(
Name = c('A', 'B', 'C', 'D', 'E', 'F'),
Number = c(456, 123, 123, 456, 123, 123),
XY_XO = c('XY', 'XY', 'XY', 'XO', 'XY', 'XY')
)
data
filtered_data <- data %>%
distinct(Number, XY_XO, .keep_all = TRUE)
filtered_data
# getting subset chromosome data
library(dplyr)
dat <- read_csv('SpeciesChromList.csv')
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
final <- c()
# getting subset chromosome data
library(dplyr)
dat <- read_csv('SpeciesChromList.csv')
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
final <- c()
# record more than 1
count <- 0
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
# de dup data
hitdata <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
hitdata <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
final <-rbind(final, hitdat)
}
}
View(hitdat)
I =1
I=1
i=1
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
hitdat
hitdat
# de dup data
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
hitdata <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
# getting subset chromosome data
library(dplyr)
dat <- read_csv('SpeciesChromList.csv')
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
final <- c()
# record more than 1
count <- 0
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
# de dup data
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
hitdata <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
hitdata <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
final <-rbind(final, hitdat)
}
}
# getting subset chromosome data
library(dplyr)
dat <- read_csv('SpeciesChromList.csv')
length(dat$Name)
tree <- read.tree('final_100trees')
tips <- tree[[1]]$tip.label
final <- c()
# record more than 1
count <- 0
for (i in 1:length(tips)){
if (tips[i] %in% dat$Name){
hitdat <- dat[which(dat$Name == tips[i]),c(1,4,6,8)]
# de dup data
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
hitdat <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
final <-rbind(final, hitdat)
}
if (tips[i] %in% dat$Genus){
hitdat <- dat[which(dat$Genus == tips[i]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
hitdat <- hitdat %>%
distinct( Chroms, SCS, .keep_all = TRUE)
if (length(hitdat$Family) == 1){
count = count + 1
}
final <-rbind(final, hitdat)
}
}
count
write_csv(final, file = "sub_chrom.csv")
final$SCS == 'XY'
final
View(final)
sum(final$SCS == 'XY')
sum(final$SCS == 'Neo-XY')
sum(final$SCS == 'NeoXY')
unique(final$SCS)
unique(final$SCS)
sum(final$SCS == 'XO')
unique(final$SCS)
min(final$Chroms)
dat$`male haploid` == 3
which(dat$`male haploid` == 3)
which(dat$`male haploid` == 4)
max(dat$`male haploid`)
which(dat$`male haploid` ==22)
