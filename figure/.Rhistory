text(x=x,y=y-6*y.dis, "Phyllognathus",adj=c(0,0.5), cex = cex)
x <- 1.9
x2 <- 1.97
lwd <- 2
lines(x=c(x,x2), y=rep(y,2), col = cols[1],lwd = lwd)
lines(x=c(x,x2), y=rep(y-y.dis,2), col = cols[2],lwd = lwd, lty =3)
lines(x=c(x,x2), y=rep(y-2*y.dis,2), col = cols[3],lwd = lwd)
lines(x=c(x,x2), y=rep(y-3*y.dis,2), col = cols[4],lwd = lwd)
lines(x=c(x,x2), y=rep(y-4*y.dis,2), col = cols[5],lwd = lwd)
lines(x=c(x,x2), y=rep(y-5*y.dis,2), col = cols[6],lwd = lwd)
lines(x=c(x,x2), y=rep(y-6*y.dis,2), col = cols[7],lwd = lwd)
axis(side=1,at=c(1,2), c("XY","NeoXY"))
xs2 <- c(2, 1+xs1[4], 1+xs1[5],2,1+xs1[6],2,1+xs1[7])
points(y=pdat$NeoXY, x=xs2, cex=1.5, col = cols, pch =16)
for(i in 1:7){
if (i != 2){
lines(x=c(xs1[i],xs2[i]), y=c(pdat$XY[i],pdat$NeoXY[i]),
col=cols[i], lwd = 3)
}
if (i == 2){
lines(x=c(xs1[i],xs2[i]), y=c(pdat$XY[i],pdat$NeoXY[i]),
col=cols[i], lwd = 3, lty =3)
}
}
# save PDF 6x6
# save PDF 6x6
# loading required library
library(chromePlus)
library(diversitree)
library(phytools)
# subtrees
trees <- read.tree('../data/final100trees')
allchrom <- read.csv('../data/SpeciesChromList.csv')
sca.tip <- c()
luc.tip <- c()
pas.tip <- c()
tip.names <- trees[[1]]$tip.label
for (i in 1:length(tip.names)){
if (tip.names[i] %in% allchrom$Name){
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Scarabaeidae"){
sca.tip <- c(sca.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Lucanidae"){
luc.tip <- c(luc.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Passalidae"){
pas.tip <- c(pas.tip, tip.names[i])
}
}
if (tip.names[i] %in% allchrom$Genus){
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Scarabaeidae"){
sca.tip <- c(sca.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Lucanidae"){
luc.tip <- c(luc.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Passalidae"){
pas.tip <- c(pas.tip, tip.names[i])
}
}
}
# create sub trees
sca.tree <- keep.tip.multiPhylo(trees, sca.tip)
luc.tree <- keep.tip.multiPhylo(trees, luc.tip)
pas.tree <- keep.tip.multiPhylo(trees, pas.tip)
View(sca.tree)
View(pas.tree)
View(luc.tree)
# subtree analyses
# define pars
iter <- 100
prior <- make.prior.exponential(r = 2)
sub <- c('sca','luc','pas')
for (i in 1:3){
# subtree
results <- vector(mode = "list", length = 100)
tree.depth <- vector(mode = "numeric", length = 100)
trees <- eval(parse(text = paste(sub[i],'tree',sep = '.')))
for(k in 1:100){
print(k)
# chrom data
# create subchrom
chrom <- data.frame()
tip.names <- eval(parse(text = paste(sub[i],'tip',sep = '.')))
# generate chrom data
for (n in 1:length(tip.names)){
if (tip.names[n] %in% allchrom$Name){
if (length(which(allchrom$Name == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Name == tip.names[n]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Name == tip.names[n])) > 1){
pick <- sample(length(which(allchrom$Name == tip.names[n])),1)
hitdat <- allchrom[which(allchrom$Name == tip.names[n])[pick],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
if (tip.names[n] %in% allchrom$Genus){
if (length(which(allchrom$Genus == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Genus == tip.names[n]),c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Genus == tip.names[n])) > 1){
pick <- (sample(length(which(allchrom$Genus == tip.names[n])),1))
hitdat <- allchrom[which(allchrom$Genus == tip.names[n])[pick],c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
}
chrom$SCS <- sub("XXXXXO", "XO", chrom$SCS)
chrom$gen.prob <- 1
for(j in 1:nrow(chrom)){
if(chrom$SCS[j] %in% c('XY','NeoXY')){
chrom$gen.prob[j] <- 0
}
}
# get the range of chromosome number
rng <- c(range(chrom$Chroms, na.rm = T)[1] - 1,
range(chrom$Chroms, na.rm = T)[2] + 1)
# make a probability matrix for chromosome number
chrom.mat <- datatoMatrix(x = chrom[,c(2,3,5)],
range = rng,
hyper = F)
tree.depth[k] <- max(branching.times(trees[[k]]))
trees[[k]]$edge.length <- trees[[k]]$edge.length / tree.depth[k]
# make the likelihood function
lik <- make.mkn(tree = trees[[k]],
states = chrom.mat,
k = ncol(chrom.mat),
strict = FALSE,
control = list(method = "ode"))
argnames(lik)
con.lik <- constrainMkn(data = chrom.mat,
lik = lik,
polyploidy = F,
hyper = F,
constrain = list(drop.demi = T,
drop.poly = T))
# safe
argnames(con.lik)
if(k == 1){
temp <- c()
temp <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
# get values for w
w <- diff(sapply(temp[11:100, 2:(length(argnames(con.lik))+1)], quantile, c(.05, .95)))
}
# run MCMC
results[[k]] <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
nsteps = iter,
w = w,
prior = prior)
}
# convert rate to millions of years
tree.depth <-c()
for(l in 1:100){
tree.depth[l] <- max(branching.times(trees[[l]]))
}
for (m in 1:length(results)){
results[[m]][,2:3] <- results[[m]][,2:3] / (tree.depth[m]*100)
}
#save data
# write.csv(do.call(rbind,results), file = paste(paste('../results/sub',sub[i], sep = '_'),'csv', sep = '.'), row.names = F)
}
sca.tip
luc.tip
pas.tip
View(luc.tree)
View(pas.tree)
i =1
# subtree
results <- vector(mode = "list", length = 100)
tree.depth <- vector(mode = "numeric", length = 100)
trees <- eval(parse(text = paste(sub[i],'tree',sep = '.')))
View(trees)
k =1
print(k)
# chrom data
# create subchrom
chrom <- data.frame()
tip.names <- eval(parse(text = paste(sub[i],'tip',sep = '.')))
tip.names
for (n in 1:length(tip.names)){
if (tip.names[n] %in% allchrom$Name){
if (length(which(allchrom$Name == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Name == tip.names[n]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Name == tip.names[n])) > 1){
pick <- sample(length(which(allchrom$Name == tip.names[n])),1)
hitdat <- allchrom[which(allchrom$Name == tip.names[n])[pick],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
if (tip.names[n] %in% allchrom$Genus){
if (length(which(allchrom$Genus == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Genus == tip.names[n]),c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Genus == tip.names[n])) > 1){
pick <- (sample(length(which(allchrom$Genus == tip.names[n])),1))
hitdat <- allchrom[which(allchrom$Genus == tip.names[n])[pick],c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
}
chrom$SCS
chrom$SCS <- sub("XXXXXO", "XO", chrom$SCS)
chrom$gen.prob <- 1
for(j in 1:nrow(chrom)){
if(chrom$SCS[j] %in% c('XY','NeoXY')){
chrom$gen.prob[j] <- 0
}
}
# get the range of chromosome number
rng <- c(range(chrom$Chroms, na.rm = T)[1] - 1,
range(chrom$Chroms, na.rm = T)[2] + 1)
rng
chrom.mat <- datatoMatrix(x = chrom[,c(2,3,5)],
range = rng,
hyper = F)
tree.depth[k] <- max(branching.times(trees[[k]]))
trees[[k]]$edge.length <- trees[[k]]$edge.length / tree.depth[k]
# make the likelihood function
lik <- make.mkn(tree = trees[[k]],
states = chrom.mat,
k = ncol(chrom.mat),
strict = FALSE,
control = list(method = "ode"))
argnames(lik)
con.lik <- constrainMkn(data = chrom.mat,
lik = lik,
polyploidy = F,
hyper = F,
constrain = list(drop.demi = T,
drop.poly = T))
# safe
argnames(con.lik)
if(k == 1){
temp <- c()
temp <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
# get values for w
w <- diff(sapply(temp[11:100, 2:(length(argnames(con.lik))+1)], quantile, c(.05, .95)))
}
k
results[[k]] <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
nsteps = iter,
w = w,
prior = prior)
prior
iter <- 100
prior <- make.prior.exponential(r = 2)
results[[k]] <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
nsteps = iter,
w = w,
prior = prior)
w
if(k == 1){
temp <- c()
temp <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
# get values for w
w <- diff(sapply(temp[11:100, 2:(length(argnames(con.lik))+1)], quantile, c(.05, .95)))
}
mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
con.lik
con.lik <- constrainMkn(data = chrom.mat,
lik = lik,
polyploidy = F,
hyper = F,
constrain = list(drop.demi = T,
drop.poly = T))
temp <- c()
temp <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
length(argnames(con.lik)))
length(argnames(con.lik))
runif(min=0, max=1,
n=length(argnames(con.lik)))
prior
# loading required library
library(chromePlus)
library(diversitree)
library(phytools)
# subtrees
trees <- read.tree('../data/final100trees')
allchrom <- read.csv('../data/SpeciesChromList.csv')
allchrom <- read.csv('../data/SpeciesChromList.csv')
sca.tip <- c()
luc.tip <- c()
pas.tip <- c()
tip.names <- trees[[1]]$tip.label
for (i in 1:length(tip.names)){
if (tip.names[i] %in% allchrom$Name){
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Scarabaeidae"){
sca.tip <- c(sca.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Lucanidae"){
luc.tip <- c(luc.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Name == tip.names[i])[1]] == "Passalidae"){
pas.tip <- c(pas.tip, tip.names[i])
}
}
if (tip.names[i] %in% allchrom$Genus){
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Scarabaeidae"){
sca.tip <- c(sca.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Lucanidae"){
luc.tip <- c(luc.tip, tip.names[i])
}
if (allchrom$Family[which(allchrom$Genus == tip.names[i])[1]] == "Passalidae"){
pas.tip <- c(pas.tip, tip.names[i])
}
}
}
# create sub trees
sca.tree <- keep.tip.multiPhylo(trees, sca.tip)
luc.tree <- keep.tip.multiPhylo(trees, luc.tip)
pas.tree <- keep.tip.multiPhylo(trees, pas.tip)
i =1
# subtree
results <- vector(mode = "list", length = 100)
tree.depth <- vector(mode = "numeric", length = 100)
trees <- eval(parse(text = paste(sub[i],'tree',sep = '.')))
trees <- eval(parse(text = paste(sub[i],'tree',sep = '.')))
eval(parse(text = paste(sub[i],'tree',sep = '.')))
parse(text = paste(sub[i],'tree',sep = '.'))
eval(parse(text = paste(sub[i],'tree',sep = '.')))
library(chromePlus)
library(diversitree)
library(phytools)
# subtree analyses
# define pars
iter <- 100
prior <- make.prior.exponential(r = 2)
sub <- c('sca','luc','pas')
i = 1
# subtree
results <- vector(mode = "list", length = 100)
tree.depth <- vector(mode = "numeric", length = 100)
trees <- eval(parse(text = paste(sub[i],'tree',sep = '.')))
k = 1
print(k)
# chrom data
# create subchrom
chrom <- data.frame()
tip.names <- eval(parse(text = paste(sub[i],'tip',sep = '.')))
for (n in 1:length(tip.names)){
if (tip.names[n] %in% allchrom$Name){
if (length(which(allchrom$Name == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Name == tip.names[n]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Name == tip.names[n])) > 1){
pick <- sample(length(which(allchrom$Name == tip.names[n])),1)
hitdat <- allchrom[which(allchrom$Name == tip.names[n])[pick],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
if (tip.names[n] %in% allchrom$Genus){
if (length(which(allchrom$Genus == tip.names[n])) == 1){
hitdat <- allchrom[which(allchrom$Genus == tip.names[n]),c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Genus == tip.names[n])) > 1){
pick <- (sample(length(which(allchrom$Genus == tip.names[n])),1))
hitdat <- allchrom[which(allchrom$Genus == tip.names[n])[pick],c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
}
View(chrom)
# load required libraries
library(chromePlus)
library(diversitree)
library(phytools)
library(plyr)
# read in data
allchrom <- read.csv('../data/SpeciesChromList.csv')
trees <- read.tree("../data/final100trees")
# define pars
iter <- 100
prior <- make.prior.exponential(r = 2)
# variables to hold results and depths
results <- vector(mode = "list", length = 100)
tree.depth <- vector(mode = "numeric", length = 100)
i =1
##################
### chrom data ###
##################
# genus level might have different data
# so we need to random pick data everytime
# subset chrom data
tip.names <- trees[[1]]$tip.label
chrom <- data.frame()
# generate chrom data
for (j in 1:length(tip.names)){
if (tip.names[j] %in% allchrom$Name){
if (length(which(allchrom$Name == tip.names[j])) == 1){
hitdat <- allchrom[which(allchrom$Name == tip.names[j]),c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Name == tip.names[j])) > 1){
pick <- sample(length(which(allchrom$Name == tip.names[j])),1)
hitdat <- allchrom[which(allchrom$Name == tip.names[j])[pick],c(1,4,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
if (tip.names[j] %in% allchrom$Genus){
if (length(which(allchrom$Genus == tip.names[j])) == 1){
hitdat <- allchrom[which(allchrom$Genus == tip.names[j]),c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
if (length(which(allchrom$Genus == tip.names[j])) > 1){
pick <- (sample(length(which(allchrom$Genus == tip.names[j])),1))
hitdat <- allchrom[which(allchrom$Genus == tip.names[j])[pick],c(1,2,6,8)]
colnames(hitdat) <- c("Family","Species","Chroms","SCS")
chrom <-rbind(chrom, hitdat)
}
}
}
chrom$SCS <- sub("XXXXXO", "XO", chrom$SCS)
chrom$gen.prob <- 1
for(k in 1:nrow(chrom)){
if(chrom$SCS[k] %in% c('XY','NeoXY')){
chrom$gen.prob[k] <- 0
}
}
# get the range of chromosome number
rng <- c(range(chrom$Chroms, na.rm = T)[1] - 1,
range(chrom$Chroms, na.rm = T)[2] + 1)
chrom
# get the range of chromosome number
rng <- c(range(chrom$Chroms, na.rm = T)[1] - 1,
range(chrom$Chroms, na.rm = T)[2] + 1)
# make a probability matrix for chromosome number
chrom.mat <- datatoMatrix(x = chrom[,c(2,3,5)],
range = rng,
hyper = F)
chrom.mat
tree.depth[i] <- max(branching.times(trees[[i]]))
trees[[i]]$edge.length <- trees[[i]]$edge.length / tree.depth[i]
# make the likelihood function
lik <- make.mkn(tree = trees[[i]],
states = chrom.mat,
k = ncol(chrom.mat),
strict = FALSE,
control = list(method = "ode"))
argnames(lik)
con.lik <- constrainMkn(data = chrom.mat,
lik = lik,
polyploidy = F,
hyper = F,
constrain = list(drop.demi = T,
drop.poly = T))
# safe
argnames(con.lik)
if(i == 1){
temp <- c()
temp <- mcmc(lik = con.lik,
x.init = runif(min=0, max=1,
n=length(argnames(con.lik))),
prior = prior,
nsteps = 100,
w = 1)
# get values for w
w <- diff(sapply(temp[11:100, 2:(length(argnames(con.lik))+1)], quantile, c(.05, .95)))
}
