setwd("~/Downloads")
# loading results
results <- readRDS('results.rds')
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
library(ape)
library(phytools)
library (diversitree)
source('functions.R')
# loading results
results <- readRDS('results.rds')
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
scs
Q
results <- readRDS('results_2')
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
library(ape)
library(phytools)
library (diversitree)
source('functions.R')
# loading results
results <- readRDS('results.rds')
View(results)
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# makeing simmap with ARD model
test <- make.simmap(trees[[37]], x=scs, model = 'ARD' , pi="fitzjohn")
# makeing simmap with the rate estimates from mcmc
test <- make.simmap(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
results <- readRDS('../Documents/GitHub/scarab-chromes/results/simple_model_scs.rds')
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
library(ape)
library(phytools)
library (diversitree)
source('functions.R')
results <- readRDS('../Documents/GitHub/scarab-chromes/results/simple_model_scs.rds')
# making simmap
trees <- read.tree('trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# makeing simmap with ARD model
test <- make.simmap(trees[[37]], x=scs, model = 'ARD' , pi="fitzjohn")
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
results <- readRDS('../Documents/GitHub/scarab-chromes/results/simple_model_scs.rds')
trees <- read.tree('../Documents/GitHub/scarab-chromes/data/final_100trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('chrom.csv', row.names = 1)
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
chrom <- read.csv('../Documents/GitHub/scarab-chromes/data/final_chrom.csv', row.names = 1)
chrom <- read.csv('../Documents/GitHub/scarab-chromes/data/final_chrom.csv')
chrom <- read.csv('chrom.csv', row.names = 1)
chrom
chrom <- read.csv('../Documents/GitHub/scarab-chromes/data/final_chrom.csv')
chrom
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
library(ape)
library(phytools)
library (diversitree)
source('functions.R')
results <- readRDS('../Documents/GitHub/scarab-chromes/results/simple_model_scs.rds')
trees <- read.tree('../Documents/GitHub/scarab-chromes/data/final_100trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('../Documents/GitHub/scarab-chromes/data/final_chrom.csv')
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
source('functions.R')
results <- readRDS('../Documents/GitHub/scarab-chromes/results/simple_model_scs.rds')
trees <- read.tree('../Documents/GitHub/scarab-chromes/data/final_100trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('../Documents/GitHub/scarab-chromes/data/final_chrom.csv')
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
setwd("~/Documents/GitHub/scarab-chromes/figure")
#simmap
source('../scripts/functions.R')
# loading results
results <- readRDS('../results/simple_model_scs.rds')
# making simmap
trees <- read.tree('../data/final_100trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('../data/final_chrom.csv')
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
#simmap
source('../../../../Downloads/functions.R')
# loading results
results <- readRDS('../results/simple_model_scs.rds')
# making simmap
trees <- read.tree('../data/final_100trees')
#transform trees to mya
for(i in 1:length(trees)){
trees[[i]]$edge.length <- trees[[i]]$edge.length * 100
}
chrom <- read.csv('../data/final_chrom.csv')
chrom$SCS[chrom$SCS %in% c('Xyp', 'Xy', 'Xyr','XY')] <- 'XY'
chrom[chrom[["SCS"]] == 'XXXXXO', 'SCS'] <- 'XO'
scs <- c()
for(i in 1:length(chrom$SCS)){
hit <- which(chrom$Species == trees[[37]]$tip.label[i])
scs[i] <- chrom$SCS[hit]
}
names(scs) <- trees[[37]]$tip.label
first_tree <- results[[37]]
b_result <- first_tree[51:100,]
Q<- matrix(c(0,3,5,1,0,6,2,4,0), 3)
colnames(Q) <- rownames(Q) <- c('NeoXY','XO','XY')
model <- Q
Q[1,2] <- mean(b_result$q23)
Q[1,3] <- mean(b_result$q21)
Q[2,1] <- mean(b_result$q32)
Q[2,3] <- mean(b_result$q31)
Q[3,1] <- mean(b_result$q12)
Q[3,2] <- mean(b_result$q13)
diag(Q) <- -rowSums(Q)
# make.simmap2 with the rate estimates from mcmc
test <- make.simmap2(tree=trees[[37]], x=scs ,Q=Q, pi="fitzjohn",nsim=1,model=model,monitor=T,rejmax=100000000)
